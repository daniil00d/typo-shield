// Generated from src/antlr-ts-compiler/grammar/TypoShield.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class TypoShieldLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly DIR_TYPE = 2;
	public static readonly START_SYM = 3;
	public static readonly METHOD_START = 4;
	public static readonly PROTOCOL = 5;
	public static readonly PROTOCOL_VERSION = 6;
	public static readonly PROTOCOL_VERSION_DEL = 7;
	public static readonly METHOD = 8;
	public static readonly LCURLY = 9;
	public static readonly LBRACKET = 10;
	public static readonly RBRACKET = 11;
	public static readonly RCURLY = 12;
	public static readonly SEMI = 13;
	public static readonly COMA = 14;
	public static readonly WS = 15;
	public static readonly TYPE = 16;
	public static readonly DIR_NAME = 17;
	public static readonly DIRECTIVE = 18;
	public static readonly UTILITY_DIRECTIVE = 19;
	public static readonly COMMENT = 20;
	public static readonly ID = 21;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "DIR_TYPE", "START_SYM", "METHOD_START", "PROTOCOL", "PROTOCOL_VERSION", 
		"PROTOCOL_VERSION_DEL", "METHOD", "LCURLY", "LBRACKET", "RBRACKET", "RCURLY", 
		"SEMI", "COMA", "WS", "TYPE", "DIR_NAME", "DIRECTIVE", "UTILITY_DIRECTIVE", 
		"COMMENT", "ID",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "':'", "'JSON'", "'>'", "'$'", undefined, undefined, "'/'", 
		undefined, "'{'", "'('", "')'", "'}'", "';'", "','",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, "DIR_TYPE", "START_SYM", "METHOD_START", "PROTOCOL", 
		"PROTOCOL_VERSION", "PROTOCOL_VERSION_DEL", "METHOD", "LCURLY", "LBRACKET", 
		"RBRACKET", "RCURLY", "SEMI", "COMA", "WS", "TYPE", "DIR_NAME", "DIRECTIVE", 
		"UTILITY_DIRECTIVE", "COMMENT", "ID",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(TypoShieldLexer._LITERAL_NAMES, TypoShieldLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return TypoShieldLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(TypoShieldLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "TypoShield.g4"; }

	// @Override
	public get ruleNames(): string[] { return TypoShieldLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return TypoShieldLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return TypoShieldLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return TypoShieldLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x17\xD2\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03" +
		"\x06\x05\x06B\n\x06\x03\x07\x03\x07\x03\x07\x03\x07\x05\x07H\n\x07\x03" +
		"\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\t\x03\t\x03\t\x05\tY\n\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03\f\x03\r\x03" +
		"\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x10\x06\x10h\n\x10\r\x10\x0E\x10" +
		"i\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03" +
		"\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x05\x11z\n\x11\x03\x12\x03" +
		"\x12\x06\x12~\n\x12\r\x12\x0E\x12\x7F\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13" +
		"\x03\x13\x03\x13\x03\x13\x03\x13\x05\x13\xAE\n\x13\x03\x14\x03\x14\x03" +
		"\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03" +
		"\x14\x03\x14\x03\x14\x03\x14\x03\x14\x05\x14\xC0\n\x14\x03\x15\x03\x15" +
		"\x03\x15\x03\x15\x03\x15\x07\x15\xC7\n\x15\f\x15\x0E\x15\xCA\v\x15\x03" +
		"\x15\x03\x15\x03\x16\x06\x16\xCF\n\x16\r\x16\x0E\x16\xD0\x02\x02\x02\x17" +
		"\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02" +
		"\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D" +
		"\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02" +
		"\x17\x03\x02\b\x03\x022;\x05\x02\v\f\x0E\x0F\"\"\x03\x02C\\\x04\x02C\\" +
		"c|\x07\x02\"\"..00C\\c|\x06\x022;C\\aac|\x02\xE1\x02\x03\x03\x02\x02\x02" +
		"\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02" +
		"\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02" +
		"\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02" +
		"\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02" +
		"\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02" +
		"#\x03\x02\x02\x02\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03" +
		"\x02\x02\x02\x02+\x03\x02\x02\x02\x03-\x03\x02\x02\x02\x05/\x03\x02\x02" +
		"\x02\x074\x03\x02\x02\x02\t6\x03\x02\x02\x02\vA\x03\x02\x02\x02\rG\x03" +
		"\x02\x02\x02\x0FI\x03\x02\x02\x02\x11X\x03\x02\x02\x02\x13Z\x03\x02\x02" +
		"\x02\x15\\\x03\x02\x02\x02\x17^\x03\x02\x02\x02\x19`\x03\x02\x02\x02\x1B" +
		"b\x03\x02\x02\x02\x1Dd\x03\x02\x02\x02\x1Fg\x03\x02\x02\x02!y\x03\x02" +
		"\x02\x02#{\x03\x02\x02\x02%\xAD\x03\x02\x02\x02\'\xBF\x03\x02\x02\x02" +
		")\xC1\x03\x02\x02\x02+\xCE\x03\x02\x02\x02-.\x07<\x02\x02.\x04\x03\x02" +
		"\x02\x02/0\x07L\x02\x0201\x07U\x02\x0212\x07Q\x02\x0223\x07P\x02\x023" +
		"\x06\x03\x02\x02\x0245\x07@\x02\x025\b\x03\x02\x02\x0267\x07&\x02\x02" +
		"7\n\x03\x02\x02\x0289\x07J\x02\x029:\x07V\x02\x02:;\x07V\x02\x02;B\x07" +
		"R\x02\x02<=\x07J\x02\x02=>\x07V\x02\x02>?\x07V\x02\x02?@\x07R\x02\x02" +
		"@B\x07U\x02\x02A8\x03\x02\x02\x02A<\x03\x02\x02\x02B\f\x03\x02\x02\x02" +
		"CD\t\x02\x02\x02DE\v\x02\x02\x02EH\t\x02\x02\x02FH\t\x02\x02\x02GC\x03" +
		"\x02\x02\x02GF\x03\x02\x02\x02H\x0E\x03\x02\x02\x02IJ\x071\x02\x02J\x10" +
		"\x03\x02\x02\x02KL\x07I\x02\x02LM\x07G\x02\x02MY\x07V\x02\x02NO\x07R\x02" +
		"\x02OP\x07Q\x02\x02PQ\x07U\x02\x02QY\x07V\x02\x02RS\x07F\x02\x02ST\x07" +
		"G\x02\x02TU\x07N\x02\x02UV\x07G\x02\x02VW\x07V\x02\x02WY\x07G\x02\x02" +
		"XK\x03\x02\x02\x02XN\x03\x02\x02\x02XR\x03\x02\x02\x02Y\x12\x03\x02\x02" +
		"\x02Z[\x07}\x02\x02[\x14\x03\x02\x02\x02\\]\x07*\x02\x02]\x16\x03\x02" +
		"\x02\x02^_\x07+\x02\x02_\x18\x03\x02\x02\x02`a\x07\x7F\x02\x02a\x1A\x03" +
		"\x02\x02\x02bc\x07=\x02\x02c\x1C\x03\x02\x02\x02de\x07.\x02\x02e\x1E\x03" +
		"\x02\x02\x02fh\t\x03\x02\x02gf\x03\x02\x02\x02hi\x03\x02\x02\x02ig\x03" +
		"\x02\x02\x02ij\x03\x02\x02\x02jk\x03\x02\x02\x02kl\b\x10\x02\x02l \x03" +
		"\x02\x02\x02mn\x07P\x02\x02no\x07w\x02\x02op\x07o\x02\x02pq\x07d\x02\x02" +
		"qr\x07g\x02\x02rz\x07t\x02\x02st\x07U\x02\x02tu\x07v\x02\x02uv\x07t\x02" +
		"\x02vw\x07k\x02\x02wx\x07p\x02\x02xz\x07i\x02\x02ym\x03\x02\x02\x02ys" +
		"\x03\x02\x02\x02z\"\x03\x02\x02\x02{}\t\x04\x02\x02|~\t\x05\x02\x02}|" +
		"\x03\x02\x02\x02~\x7F\x03\x02\x02\x02\x7F}\x03\x02\x02\x02\x7F\x80\x03" +
		"\x02\x02\x02\x80$\x03\x02\x02\x02\x81\x82\x07B\x02\x02\x82\x83\x07u\x02" +
		"\x02\x83\x84\x07g\x02\x02\x84\x85\x07t\x02\x02\x85\x86\x07x\x02\x02\x86" +
		"\xAE\x07g\x02\x02\x87\x88\x07B\x02\x02\x88\x89\x07k\x02\x02\x89\x8A\x07" +
		"p\x02\x02\x8A\x8B\x07r\x02\x02\x8B\x8C\x07w\x02\x02\x8C\xAE\x07v\x02\x02" +
		"\x8D\x8E\x07B\x02\x02\x8E\x8F\x07o\x02\x02\x8F\x90\x07g\x02\x02\x90\x91" +
		"\x07v\x02\x02\x91\xAE\x07c\x02\x02\x92\x93\x07B\x02\x02\x93\x94\x07v\x02" +
		"\x02\x94\x95\x07g\x02\x02\x95\x96\x07u\x02\x02\x96\xAE\x07v\x02\x02\x97" +
		"\x98\x07B\x02\x02\x98\x99\x07j\x02\x02\x99\x9A\x07g\x02\x02\x9A\x9B\x07" +
		"c\x02\x02\x9B\x9C\x07f\x02\x02\x9C\x9D\x07g\x02\x02\x9D\x9E\x07t\x02\x02" +
		"\x9E\xAE\x07u\x02\x02\x9F\xA0\x07B\x02\x02\xA0\xA1\x07q\x02\x02\xA1\xA2" +
		"\x07w\x02\x02\xA2\xA3\x07v\x02\x02\xA3\xA4\x07r\x02\x02\xA4\xA5\x07w\x02" +
		"\x02\xA5\xAE\x07v\x02\x02\xA6\xA7\x07B\x02\x02\xA7\xA8\x07u\x02\x02\xA8" +
		"\xA9\x07g\x02\x02\xA9\xAA\x07c\x02\x02\xAA\xAB\x07t\x02\x02\xAB\xAC\x07" +
		"e\x02\x02\xAC\xAE\x07j\x02\x02\xAD\x81\x03\x02\x02\x02\xAD\x87\x03\x02" +
		"\x02\x02\xAD\x8D\x03\x02\x02\x02\xAD\x92\x03\x02\x02\x02\xAD\x97\x03\x02" +
		"\x02\x02\xAD\x9F\x03\x02\x02\x02\xAD\xA6\x03\x02\x02\x02\xAE&\x03\x02" +
		"\x02\x02\xAF\xB0\x07%\x02\x02\xB0\xB1\x07k\x02\x02\xB1\xB2\x07p\x02\x02" +
		"\xB2\xB3\x07e\x02\x02\xB3\xB4\x07n\x02\x02\xB4\xB5\x07w\x02\x02\xB5\xB6" +
		"\x07f\x02\x02\xB6\xC0\x07g\x02\x02\xB7\xB8\x07%\x02\x02\xB8\xB9\x07g\x02" +
		"\x02\xB9\xBA\x07z\x02\x02\xBA\xBB\x07e\x02\x02\xBB\xBC\x07n\x02\x02\xBC" +
		"\xBD\x07w\x02\x02\xBD\xBE\x07f\x02\x02\xBE\xC0\x07g\x02\x02\xBF\xAF\x03" +
		"\x02\x02\x02\xBF\xB7\x03\x02\x02\x02\xC0(\x03\x02\x02\x02\xC1\xC2\x07" +
		"1\x02\x02\xC2\xC3\x071\x02\x02\xC3\xC4\x071\x02\x02\xC4\xC8\x03\x02\x02" +
		"\x02\xC5\xC7\t\x06\x02\x02\xC6\xC5\x03\x02\x02\x02\xC7\xCA\x03\x02\x02" +
		"\x02\xC8\xC6\x03\x02\x02\x02\xC8\xC9\x03\x02\x02\x02\xC9\xCB\x03\x02\x02" +
		"\x02\xCA\xC8\x03\x02\x02\x02\xCB\xCC\b\x15\x02\x02\xCC*\x03\x02\x02\x02" +
		"\xCD\xCF\t\x07\x02\x02\xCE\xCD\x03\x02\x02\x02\xCF\xD0\x03\x02\x02\x02" +
		"\xD0\xCE\x03\x02\x02\x02\xD0\xD1\x03\x02\x02\x02\xD1,\x03\x02\x02\x02" +
		"\r\x02AGXiy\x7F\xAD\xBF\xC8\xD0\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!TypoShieldLexer.__ATN) {
			TypoShieldLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(TypoShieldLexer._serializedATN));
		}

		return TypoShieldLexer.__ATN;
	}

}

