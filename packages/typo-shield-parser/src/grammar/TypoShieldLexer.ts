// Generated from src/grammar/TypoShield.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class TypoShieldLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly DIR_TYPE = 5;
	public static readonly START_SYM = 6;
	public static readonly METHOD_START = 7;
	public static readonly PROTOCOL = 8;
	public static readonly NUMBER = 9;
	public static readonly PROTOCOL_VERSION = 10;
	public static readonly PROTOCOL_VERSION_DEL = 11;
	public static readonly METHOD = 12;
	public static readonly DEFINE = 13;
	public static readonly DEFINE_ERROR = 14;
	public static readonly LCURLY = 15;
	public static readonly LBRACKET = 16;
	public static readonly RBRACKET = 17;
	public static readonly RCURLY = 18;
	public static readonly SEMI = 19;
	public static readonly COMA = 20;
	public static readonly WS = 21;
	public static readonly TYPE = 22;
	public static readonly UTILITY_DIRECTIVE = 23;
	public static readonly ENTITY_NAME = 24;
	public static readonly DIRECTIVE = 25;
	public static readonly COMMENT = 26;
	public static readonly ID = 27;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "DIR_TYPE", "START_SYM", "METHOD_START", 
		"PROTOCOL", "NUMBER", "PROTOCOL_VERSION", "PROTOCOL_VERSION_DEL", "METHOD", 
		"DEFINE", "DEFINE_ERROR", "LCURLY", "LBRACKET", "RBRACKET", "RCURLY", 
		"SEMI", "COMA", "WS", "TYPE", "UTILITY_DIRECTIVE", "ENTITY_NAME", "DIRECTIVE", 
		"COMMENT", "ID",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "':'", "'\"'", "'['", "']'", "'JSON'", "'>'", "'$'", undefined, 
		undefined, undefined, "'/'", undefined, "'define'", "'error'", "'{'", 
		"'('", "')'", "'}'", "';'", "','",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, "DIR_TYPE", "START_SYM", 
		"METHOD_START", "PROTOCOL", "NUMBER", "PROTOCOL_VERSION", "PROTOCOL_VERSION_DEL", 
		"METHOD", "DEFINE", "DEFINE_ERROR", "LCURLY", "LBRACKET", "RBRACKET", 
		"RCURLY", "SEMI", "COMA", "WS", "TYPE", "UTILITY_DIRECTIVE", "ENTITY_NAME", 
		"DIRECTIVE", "COMMENT", "ID",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(TypoShieldLexer._LITERAL_NAMES, TypoShieldLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return TypoShieldLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(TypoShieldLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "TypoShield.g4"; }

	// @Override
	public get ruleNames(): string[] { return TypoShieldLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return TypoShieldLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return TypoShieldLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return TypoShieldLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x1D\u0108\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t" +
		"\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x05\tT\n\t\x03\n\x06" +
		"\nW\n\n\r\n\x0E\nX\x03\v\x03\v\x03\v\x03\v\x05\v_\n\v\x03\f\x03\f\x03" +
		"\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03\r\x03" +
		"\r\x05\rp\n\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E" +
		"\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x11" +
		"\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03\x14\x03\x15\x03\x15" +
		"\x03\x16\x06\x16\x8C\n\x16\r\x16\x0E\x16\x8D\x03\x16\x03\x16\x03\x17\x03" +
		"\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03" +
		"\x17\x03\x17\x05\x17\x9E\n\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18" +
		"\x03\x18\x03\x18\x05\x18\xB0\n\x18\x03\x19\x03\x19\x06\x19\xB4\n\x19\r" +
		"\x19\x0E\x19\xB5\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A" +
		"\x03\x1A\x05\x1A\xF6\n\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x07" +
		"\x1B\xFD\n\x1B\f\x1B\x0E\x1B\u0100\v\x1B\x03\x1B\x03\x1B\x03\x1C\x06\x1C" +
		"\u0105\n\x1C\r\x1C\x0E\x1C\u0106\x02\x02\x02\x1D\x03\x02\x03\x05\x02\x04" +
		"\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v" +
		"\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!" +
		"\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x19" +
		"1\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D\x03\x02\b\x03\x022;\x05\x02\v\f\x0E" +
		"\x0F\"\"\x03\x02C\\\x04\x02C\\c|\b\x02\"\"..00C\\c|\u0412\u0451\x06\x02" +
		"2;C\\aac|\x02\u011B\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02" +
		"\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r" +
		"\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13" +
		"\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19" +
		"\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F" +
		"\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02" +
		"\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02" +
		"\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03" +
		"\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x039\x03\x02\x02" +
		"\x02\x05;\x03\x02\x02\x02\x07=\x03\x02\x02\x02\t?\x03\x02\x02\x02\vA\x03" +
		"\x02\x02\x02\rF\x03\x02\x02\x02\x0FH\x03\x02\x02\x02\x11S\x03\x02\x02" +
		"\x02\x13V\x03\x02\x02\x02\x15^\x03\x02\x02\x02\x17`\x03\x02\x02\x02\x19" +
		"o\x03\x02\x02\x02\x1Bq\x03\x02\x02\x02\x1Dx\x03\x02\x02\x02\x1F~\x03\x02" +
		"\x02\x02!\x80\x03\x02\x02\x02#\x82\x03\x02\x02\x02%\x84\x03\x02\x02\x02" +
		"\'\x86\x03\x02\x02\x02)\x88\x03\x02\x02\x02+\x8B\x03\x02\x02\x02-\x9D" +
		"\x03\x02\x02\x02/\xAF\x03\x02\x02\x021\xB1\x03\x02\x02\x023\xF5\x03\x02" +
		"\x02\x025\xF7\x03\x02\x02\x027\u0104\x03\x02\x02\x029:\x07<\x02\x02:\x04" +
		"\x03\x02\x02\x02;<\x07$\x02\x02<\x06\x03\x02\x02\x02=>\x07]\x02\x02>\b" +
		"\x03\x02\x02\x02?@\x07_\x02\x02@\n\x03\x02\x02\x02AB\x07L\x02\x02BC\x07" +
		"U\x02\x02CD\x07Q\x02\x02DE\x07P\x02\x02E\f\x03\x02\x02\x02FG\x07@\x02" +
		"\x02G\x0E\x03\x02\x02\x02HI\x07&\x02\x02I\x10\x03\x02\x02\x02JK\x07J\x02" +
		"\x02KL\x07V\x02\x02LM\x07V\x02\x02MT\x07R\x02\x02NO\x07J\x02\x02OP\x07" +
		"V\x02\x02PQ\x07V\x02\x02QR\x07R\x02\x02RT\x07U\x02\x02SJ\x03\x02\x02\x02" +
		"SN\x03\x02\x02\x02T\x12\x03\x02\x02\x02UW\t\x02\x02\x02VU\x03\x02\x02" +
		"\x02WX\x03\x02\x02\x02XV\x03\x02\x02\x02XY\x03\x02\x02\x02Y\x14\x03\x02" +
		"\x02\x02Z[\t\x02\x02\x02[\\\v\x02\x02\x02\\_\t\x02\x02\x02]_\t\x02\x02" +
		"\x02^Z\x03\x02\x02\x02^]\x03\x02\x02\x02_\x16\x03\x02\x02\x02`a\x071\x02" +
		"\x02a\x18\x03\x02\x02\x02bc\x07I\x02\x02cd\x07G\x02\x02dp\x07V\x02\x02" +
		"ef\x07R\x02\x02fg\x07Q\x02\x02gh\x07U\x02\x02hp\x07V\x02\x02ij\x07F\x02" +
		"\x02jk\x07G\x02\x02kl\x07N\x02\x02lm\x07G\x02\x02mn\x07V\x02\x02np\x07" +
		"G\x02\x02ob\x03\x02\x02\x02oe\x03\x02\x02\x02oi\x03\x02\x02\x02p\x1A\x03" +
		"\x02\x02\x02qr\x07f\x02\x02rs\x07g\x02\x02st\x07h\x02\x02tu\x07k\x02\x02" +
		"uv\x07p\x02\x02vw\x07g\x02\x02w\x1C\x03\x02\x02\x02xy\x07g\x02\x02yz\x07" +
		"t\x02\x02z{\x07t\x02\x02{|\x07q\x02\x02|}\x07t\x02\x02}\x1E\x03\x02\x02" +
		"\x02~\x7F\x07}\x02\x02\x7F \x03\x02\x02\x02\x80\x81\x07*\x02\x02\x81\"" +
		"\x03\x02\x02\x02\x82\x83\x07+\x02\x02\x83$\x03\x02\x02\x02\x84\x85\x07" +
		"\x7F\x02\x02\x85&\x03\x02\x02\x02\x86\x87\x07=\x02\x02\x87(\x03\x02\x02" +
		"\x02\x88\x89\x07.\x02\x02\x89*\x03\x02\x02\x02\x8A\x8C\t\x03\x02\x02\x8B" +
		"\x8A\x03\x02\x02\x02\x8C\x8D\x03\x02\x02\x02\x8D\x8B\x03\x02\x02\x02\x8D" +
		"\x8E\x03\x02\x02\x02\x8E\x8F\x03\x02\x02\x02\x8F\x90\b\x16\x02\x02\x90" +
		",\x03\x02\x02\x02\x91\x92\x07P\x02\x02\x92\x93\x07w\x02\x02\x93\x94\x07" +
		"o\x02\x02\x94\x95\x07d\x02\x02\x95\x96\x07g\x02\x02\x96\x9E\x07t\x02\x02" +
		"\x97\x98\x07U\x02\x02\x98\x99\x07v\x02\x02\x99\x9A\x07t\x02\x02\x9A\x9B" +
		"\x07k\x02\x02\x9B\x9C\x07p\x02\x02\x9C\x9E\x07i\x02\x02\x9D\x91\x03\x02" +
		"\x02\x02\x9D\x97\x03\x02\x02\x02\x9E.\x03\x02\x02\x02\x9F\xA0\x07%\x02" +
		"\x02\xA0\xA1\x07k\x02\x02\xA1\xA2\x07p\x02\x02\xA2\xA3\x07e\x02\x02\xA3" +
		"\xA4\x07n\x02\x02\xA4\xA5\x07w\x02\x02\xA5\xA6\x07f\x02\x02\xA6\xB0\x07" +
		"g\x02\x02\xA7\xA8\x07%\x02\x02\xA8\xA9\x07g\x02\x02\xA9\xAA\x07z\x02\x02" +
		"\xAA\xAB\x07e\x02\x02\xAB\xAC\x07n\x02\x02\xAC\xAD\x07w\x02\x02\xAD\xAE" +
		"\x07f\x02\x02\xAE\xB0\x07g\x02\x02\xAF\x9F\x03\x02\x02\x02\xAF\xA7\x03" +
		"\x02\x02\x02\xB00\x03\x02\x02\x02\xB1\xB3\t\x04\x02\x02\xB2\xB4\t\x05" +
		"\x02\x02\xB3\xB2\x03\x02\x02\x02\xB4\xB5\x03\x02\x02\x02\xB5\xB3\x03\x02" +
		"\x02\x02\xB5\xB6\x03\x02\x02\x02\xB62\x03\x02\x02\x02\xB7\xB8\x07B\x02" +
		"\x02\xB8\xB9\x07u\x02\x02\xB9\xBA\x07g\x02\x02\xBA\xBB\x07t\x02\x02\xBB" +
		"\xBC\x07x\x02\x02\xBC\xF6\x07g\x02\x02\xBD\xBE\x07B\x02\x02\xBE\xBF\x07" +
		"d\x02\x02\xBF\xC0\x07q\x02\x02\xC0\xC1\x07f\x02\x02\xC1\xF6\x07{\x02\x02" +
		"\xC2\xC3\x07B\x02\x02\xC3\xC4\x07r\x02\x02\xC4\xC5\x07c\x02\x02\xC5\xC6" +
		"\x07t\x02\x02\xC6\xC7\x07c\x02\x02\xC7\xC8\x07o\x02\x02\xC8\xF6\x07u\x02" +
		"\x02\xC9\xCA\x07B\x02\x02\xCA\xCB\x07s\x02\x02\xCB\xCC\x07w\x02\x02\xCC" +
		"\xCD\x07g\x02\x02\xCD\xCE\x07t\x02\x02\xCE\xF6\x07{\x02\x02\xCF\xD0\x07" +
		"B\x02\x02\xD0\xD1\x07o\x02\x02\xD1\xD2\x07g\x02\x02\xD2\xD3\x07v\x02\x02" +
		"\xD3\xF6\x07c\x02\x02\xD4\xD5\x07B\x02\x02\xD5\xD6\x07v\x02\x02\xD6\xD7" +
		"\x07g\x02\x02\xD7\xD8\x07u\x02\x02\xD8\xF6\x07v\x02\x02\xD9\xDA\x07B\x02" +
		"\x02\xDA\xDB\x07j\x02\x02\xDB\xDC\x07g\x02\x02\xDC\xDD\x07c\x02\x02\xDD" +
		"\xDE\x07f\x02\x02\xDE\xDF\x07g\x02\x02\xDF\xE0\x07t\x02\x02\xE0\xF6\x07" +
		"u\x02\x02\xE1\xE2\x07B\x02\x02\xE2\xE3\x07q\x02\x02\xE3\xE4\x07w\x02\x02" +
		"\xE4\xE5\x07v\x02\x02\xE5\xE6\x07r\x02\x02\xE6\xE7\x07w\x02\x02\xE7\xF6" +
		"\x07v\x02\x02\xE8\xE9\x07B\x02\x02\xE9\xEA\x07u\x02\x02\xEA\xEB\x07g\x02" +
		"\x02\xEB\xEC\x07c\x02\x02\xEC\xED\x07t\x02\x02\xED\xEE\x07e\x02\x02\xEE" +
		"\xF6\x07j\x02\x02\xEF\xF0\x07B\x02\x02\xF0\xF1\x07g\x02\x02\xF1\xF2\x07" +
		"t\x02\x02\xF2\xF3\x07t\x02\x02\xF3\xF4\x07q\x02\x02\xF4\xF6\x07t\x02\x02" +
		"\xF5\xB7\x03\x02\x02\x02\xF5\xBD\x03\x02\x02\x02\xF5\xC2\x03\x02\x02\x02" +
		"\xF5\xC9\x03\x02\x02\x02\xF5\xCF\x03\x02\x02\x02\xF5\xD4\x03\x02\x02\x02" +
		"\xF5\xD9\x03\x02\x02\x02\xF5\xE1\x03\x02\x02\x02\xF5\xE8\x03\x02\x02\x02" +
		"\xF5\xEF\x03\x02\x02\x02\xF64\x03\x02\x02\x02\xF7\xF8\x071\x02\x02\xF8" +
		"\xF9\x071\x02\x02\xF9\xFA\x071\x02\x02\xFA\xFE\x03\x02\x02\x02\xFB\xFD" +
		"\t\x06\x02\x02\xFC\xFB\x03\x02\x02\x02\xFD\u0100\x03\x02\x02\x02\xFE\xFC" +
		"\x03\x02\x02\x02\xFE\xFF\x03\x02\x02\x02\xFF\u0101\x03\x02\x02\x02\u0100" +
		"\xFE\x03\x02\x02\x02\u0101\u0102\b\x1B\x02\x02\u01026\x03\x02\x02\x02" +
		"\u0103\u0105\t\x07\x02\x02\u0104\u0103\x03\x02\x02\x02\u0105\u0106\x03" +
		"\x02\x02\x02\u0106\u0104\x03\x02\x02\x02\u0106\u0107\x03\x02\x02\x02\u0107" +
		"8\x03\x02\x02\x02\x0E\x02SX^o\x8D\x9D\xAF\xB5\xF5\xFE\u0106\x03\b\x02" +
		"\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!TypoShieldLexer.__ATN) {
			TypoShieldLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(TypoShieldLexer._serializedATN));
		}

		return TypoShieldLexer.__ATN;
	}

}

